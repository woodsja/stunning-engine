from pysc2.agents import base_agent
from pysc2.env import sc2_env
from pysc2.lib import actions, features, units
from absl import app

# simple agent just to play around with parsing the observation space
class HumanAgent(base_agent.BaseAgent):
  def __init__(self):
    super(HumanAgent, self).__init__()

  def step(self, obs):
    super(HumanAgent, self).step(obs)

    return actions.FUNCTIONS.no_op()


def main(unused_argv):
  agent = HumanAgent()
  try:
    while True:
      with sc2_env.SC2Env(map_name="DefeatRoaches", agent_interface_format=features.AgentInterfaceFormat(
        feature_dimensions=features.Dimensions(screen=84, minimap=64), use_feature_units=True), step_mul=1,
                          game_steps_per_episode=0, visualize=True) as env:

        agent.setup(env.observation_spec(), env.action_spec())

        timesteps = env.reset()
        agent.reset()

        while True:
          step_actions = [agent.step(timesteps[0])]

          timesteps = env.step(step_actions)

  except KeyboardInterrupt:
    pass

if __name__ == "__main__":
  app.run(main)


